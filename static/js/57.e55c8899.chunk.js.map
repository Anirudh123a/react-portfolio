{"version":3,"file":"static/js/57.e55c8899.chunk.js","mappings":"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","sources":["components/Header.jsx","components/Projects.jsx","../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/Badge.js","components/projects/ProjectCard.jsx","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport Fade from 'react-reveal/Fade';\nimport Header from './Header';\nimport endpoints from '../constants/endpoints';\nimport ProjectCard from './projects/ProjectCard';\nimport FallbackSpinner from './FallbackSpinner';\n\nconst styles = {\n  containerStyle: {\n    marginBottom: 25,\n  },\n};\n\nconst Projects = ({ header }) => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch(endpoints.projects)\n      .then((res) => res.json())\n      .then((res) => setData(res))\n      .catch((err) => console.error('Error fetching projects:', err));\n  }, []);\n\n  return (\n    <>\n      <Header title={header} />\n      {data ? (\n        <div className=\"section-content-container\">\n          <Container style={styles.containerStyle}>\n            <Row xs={1} sm={1} md={2} lg={3} className=\"g-4\">\n              {data.projects?.map((project) => (\n                <Fade key={project.title}>\n                  <ProjectCard project={project} />\n                </Fade>\n              ))}\n            </Row>\n          </Container>\n        </div>\n      ) : (\n        <FallbackSpinner />\n      )}\n    </>\n  );\n};\n\nProjects.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Projects;\n","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;","import React, { useContext } from 'react';\nimport {\n  Button, Card, Badge, Col,\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\n\nconst styles = {\n  badgeStyle: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    margin: 5,\n  },\n  cardStyle: {\n    borderRadius: 10,\n  },\n  cardTitleStyle: {\n    fontSize: 24,\n    fontWeight: 700,\n  },\n  cardTextStyle: {\n    textAlign: 'left',\n  },\n  linkStyle: {\n    textDecoration: 'none',\n    padding: 10,\n  },\n  buttonStyle: {\n    margin: 5,\n  },\n};\n\nconst ProjectCard = (props) => {\n  const theme = useContext(ThemeContext);\n  const parseBodyText = (text) => <ReactMarkdown children={text} />;\n\n  const { project } = props;\n\n  return (\n    <Col>\n      <Card\n        style={{\n          ...styles.cardStyle,\n          backgroundColor: theme.cardBackground,\n          borderColor: theme.cardBorderColor,\n        }}\n        text={theme.bsSecondaryVariant}\n      >\n        <Card.Img variant=\"top\" src={project?.image} />\n        <Card.Body>\n          <Card.Title style={styles.cardTitleStyle}>{project.title}</Card.Title>\n          <Card.Text style={styles.cardTextStyle}>\n            {parseBodyText(project.bodyText)}\n          </Card.Text>\n        </Card.Body>\n\n        <Card.Body>\n          {project?.links?.map((link) => (\n            <Button\n              key={link.href}\n              style={styles.buttonStyle}\n              variant={'outline-' + theme.bsSecondaryVariant}\n              onClick={() => window.open(link.href, '_blank')}\n            >\n              {link.text}\n            </Button>\n          ))}\n        </Card.Body>\n        {project.tags && (\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\n            {project.tags.map((tag) => (\n              <Badge\n                key={tag}\n                pill\n                bg={theme.bsSecondaryVariant}\n                text={theme.bsPrimaryVariant}\n                style={styles.badgeStyle}\n              >\n                {tag}\n              </Badge>\n            ))}\n          </Card.Footer>\n        )}\n      </Card>\n    </Col>\n  );\n};\n\nProjectCard.propTypes = {\n  project: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    bodyText: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    links: PropTypes.arrayOf(PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      href: PropTypes.string.isRequired,\n    })),\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default ProjectCard;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["props","title","_jsx","className","children","styles","containerStyle","marginBottom","_ref","_data$projects","header","data","setData","useState","useEffect","fetch","endpoints","projects","then","res","json","catch","err","console","error","_jsxs","_Fragment","Header","Container","style","Row","xs","sm","md","lg","map","project","Fade","ProjectCard","FallbackSpinner","CardBody","React","ref","bsPrefix","as","Component","useBootstrapPrefix","classNames","displayName","CardFooter","CardHeader","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","CardImg","variant","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","Card","bg","text","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Footer","ImgOverlay","Button","size","active","disabled","buttonProps","tagName","useButtonProps","href","Badge","pill","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","margin","cardStyle","borderRadius","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","buttonStyle","_project$links","theme","useContext","ThemeContext","Col","backgroundColor","cardBackground","borderColor","cardBorderColor","bsSecondaryVariant","src","image","bodyText","ReactMarkdown","links","link","onClick","window","open","tags","cardFooterBackground","tag","bsPrimaryVariant","colProps","spans","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","push","useCol","length","decoratedBsPrefix","sizePrefix","cols"],"sourceRoot":""}